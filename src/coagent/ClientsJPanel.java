/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coagent;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author axelknutsson
 */
public class ClientsJPanel extends javax.swing.JPanel {

    
    /**
     * Creates new form ClientsJPanel
     */
    public ClientsJPanel() {
        initComponents();
        this.setFont(new java.awt.Font("Avenir Next", 0, 13));
        
        // ger färg till sidorna
        JTableHeader headerAdd = tblEditCli.getTableHeader();
        headerAdd.setBackground( new Color(190, 227, 219) );
        headerAdd.setForeground( new Color(85, 91, 110) );
        
        JTableHeader headerSearch = tblShowCli.getTableHeader();
        headerSearch.setBackground( new Color(190, 227, 219) );
        headerSearch.setForeground( new Color(85, 91, 110) );
        // färgar hempanelen i clients
        btnShowClient.setBackground(new Color(190, 227, 219));
        btnShowClient.setOpaque(true);
        btnEditClient.setBackground(new Color(190, 227, 219));
        btnEditClient.setOpaque(true);
        lblHomeCli.setBackground(new Color(190, 227, 219));
        lblHomeCli.setOpaque(true);
        // färgar knappar i editpanelen.
        btnDeleteCli.setBackground(new Color(190, 227, 219));
        btnDeleteCli.setOpaque(true);
        btnAddCli.setBackground(new Color(190, 227, 219));
        btnAddCli.setOpaque(true);
        btnUpdateCli.setBackground(new Color(190, 227, 219));
        btnUpdateCli.setOpaque(true);
        btnSearchEdit.setBackground(new Color(190, 227, 219));
        btnSearchEdit.setOpaque(true);
        btnBackEdit.setBackground(new Color(190, 227, 219));
        btnBackEdit.setOpaque(true);
        // färgar knappar showpanelen
        btnShowSearch.setBackground(new Color(190, 227, 219));
        btnShowSearch.setOpaque(true);
        btnShowBack.setBackground(new Color(190, 227, 219));
        btnShowBack.setOpaque(true);
        txtShowSearch.setOpaque(true);
        // osynliga ID fält och kolumner. 
        tblEditCli.getColumnModel().getColumn(0).setMinWidth(0);
        tblEditCli.getColumnModel().getColumn(0).setMaxWidth(0);
        tblShowCli.getColumnModel().getColumn(0).setMinWidth(0);
        tblShowCli.getColumnModel().getColumn(0).setMaxWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHomeCli = new javax.swing.JPanel();
        btnShowClient = new javax.swing.JButton();
        btnEditClient = new javax.swing.JButton();
        lblHomeCli = new javax.swing.JLabel();
        panelShowCli = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShowCli = new javax.swing.JTable();
        txtShowSearch = new javax.swing.JTextField();
        btnShowBack = new javax.swing.JButton();
        btnShowSearch = new javax.swing.JButton();
        panelEditCli = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEditCli = new javax.swing.JTable();
        btnAddCli = new javax.swing.JButton();
        btnUpdateCli = new javax.swing.JButton();
        btnDeleteCli = new javax.swing.JButton();
        btnBackEdit = new javax.swing.JButton();
        txtEditSearch = new javax.swing.JTextField();
        btnSearchEdit = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        panelHomeCli.setBackground(new java.awt.Color(190, 227, 219));
        panelHomeCli.setMinimumSize(new java.awt.Dimension(250, 250));

        btnShowClient.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnShowClient.setText("Show Clients");
        btnShowClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowClientActionPerformed(evt);
            }
        });

        btnEditClient.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnEditClient.setText("Edit Clients");
        btnEditClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditClientActionPerformed(evt);
            }
        });

        lblHomeCli.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        lblHomeCli.setText("Clients");

        javax.swing.GroupLayout panelHomeCliLayout = new javax.swing.GroupLayout(panelHomeCli);
        panelHomeCli.setLayout(panelHomeCliLayout);
        panelHomeCliLayout.setHorizontalGroup(
            panelHomeCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeCliLayout.createSequentialGroup()
                .addGroup(panelHomeCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHomeCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnEditClient, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelHomeCliLayout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(btnShowClient, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelHomeCliLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(lblHomeCli)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        panelHomeCliLayout.setVerticalGroup(
            panelHomeCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeCliLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(lblHomeCli)
                .addGap(52, 52, 52)
                .addComponent(btnShowClient, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnEditClient, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        add(panelHomeCli, "card2");

        panelShowCli.setMinimumSize(new java.awt.Dimension(250, 250));

        tblShowCli.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        tblShowCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Contact", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblShowCli);

        txtShowSearch.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtShowSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219)));
        txtShowSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtShowSearchKeyPressed(evt);
            }
        });

        btnShowBack.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnShowBack.setText("Back");
        btnShowBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowBackActionPerformed(evt);
            }
        });

        btnShowSearch.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnShowSearch.setText("Search");
        btnShowSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelShowCliLayout = new javax.swing.GroupLayout(panelShowCli);
        panelShowCli.setLayout(panelShowCliLayout);
        panelShowCliLayout.setHorizontalGroup(
            panelShowCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowCliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShowCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelShowCliLayout.createSequentialGroup()
                        .addComponent(txtShowSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShowSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShowCliLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnShowBack)))
                .addContainerGap())
        );
        panelShowCliLayout.setVerticalGroup(
            panelShowCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowCliLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(panelShowCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtShowSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnShowBack)
                .addGap(38, 38, 38))
        );

        add(panelShowCli, "card4");

        panelEditCli.setMinimumSize(new java.awt.Dimension(250, 250));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel2.setText("Contact:");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel3.setText("Email:");

        txtName.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219)));

        txtContact.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtContact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219)));

        txtEmail.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219)));

        tblEditCli.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        tblEditCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Contact", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEditCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEditCliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEditCli);

        btnAddCli.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnAddCli.setText("Add");
        btnAddCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCliActionPerformed(evt);
            }
        });

        btnUpdateCli.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnUpdateCli.setText("Update");
        btnUpdateCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCliActionPerformed(evt);
            }
        });

        btnDeleteCli.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnDeleteCli.setText("Delete");
        btnDeleteCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCliActionPerformed(evt);
            }
        });

        btnBackEdit.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnBackEdit.setText("Back");
        btnBackEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackEditActionPerformed(evt);
            }
        });

        txtEditSearch.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtEditSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219), new java.awt.Color(190, 227, 219)));
        txtEditSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEditSearchKeyPressed(evt);
            }
        });

        btnSearchEdit.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnSearchEdit.setText("Search");
        btnSearchEdit.setMaximumSize(new java.awt.Dimension(91, 52));
        btnSearchEdit.setMinimumSize(new java.awt.Dimension(91, 52));
        btnSearchEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditCliLayout = new javax.swing.GroupLayout(panelEditCli);
        panelEditCli.setLayout(panelEditCliLayout);
        panelEditCliLayout.setHorizontalGroup(
            panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditCliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditCliLayout.createSequentialGroup()
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditCliLayout.createSequentialGroup()
                                .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelEditCliLayout.createSequentialGroup()
                                .addComponent(txtEditSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeleteCli, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelEditCliLayout.createSequentialGroup()
                                .addComponent(btnAddCli, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdateCli)))
                        .addGap(0, 87, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditCliLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBackEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelEditCliLayout.setVerticalGroup(
            panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditCliLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddCli, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateCli, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEditCliLayout.createSequentialGroup()
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditCliLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(panelEditCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEditSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnDeleteCli, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBackEdit)
                .addGap(39, 39, 39))
        );

        add(panelEditCli, "card5");
    }// </editor-fold>//GEN-END:initComponents

// gör bara show panelen synlig och fyller i table med clients.
    private void btnShowClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowClientActionPerformed
        panelHomeCli.setVisible(false);
        panelShowCli.setVisible(true);
        panelEditCli.setVisible(false);
        // showClient(tblShowCli); // Detta är dumt om databasen är stor 
    }//GEN-LAST:event_btnShowClientActionPerformed

// gör bara edit panelen synlig fyller i table med clients
    private void btnEditClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditClientActionPerformed
        panelHomeCli.setVisible(false);
        panelShowCli.setVisible(false);
        panelEditCli.setVisible(true);
        // showClient(tblEditCli); //  Detta är dumt om databasen är stor 
    }//GEN-LAST:event_btnEditClientActionPerformed
    
    // gör bara "hemskärmen" synlig.
    private void btnBackEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackEditActionPerformed
        // button back
        panelHomeCli.setVisible(true);
        panelShowCli.setVisible(false);
        panelEditCli.setVisible(false);
    }//GEN-LAST:event_btnBackEditActionPerformed
    
    // uppdaterar table i edit
    private void btnSearchEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEditActionPerformed
        // button search
        searchClient(txtEditSearch, tblEditCli);
    }//GEN-LAST:event_btnSearchEditActionPerformed
    
    
    
    // tar bort en vald client i en table. 
    private void btnDeleteCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCliActionPerformed
        deleteClient(tblEditCli);
        txtName.setText("");
        txtContact.setText("");
        txtEmail.setText("");
        
    }//GEN-LAST:event_btnDeleteCliActionPerformed

        // lägger till en client som står i textfälten.
    private void btnAddCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCliActionPerformed
        addClient();
    }//GEN-LAST:event_btnAddCliActionPerformed
    
    // gör bara "hemskärmen" syndlig.
    private void btnShowBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowBackActionPerformed
        panelHomeCli.setVisible(true);
        panelShowCli.setVisible(false);
        panelEditCli.setVisible(false);
    }//GEN-LAST:event_btnShowBackActionPerformed
   
  
    // Om man klickar på en rad i table i edit så fylls textrutorna i. 
    private void tblEditCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEditCliMouseClicked

        DefaultTableModel tblModel = (DefaultTableModel) tblEditCli.getModel();
       
        String tblName = tblModel.getValueAt(tblEditCli.getSelectedRow(), 1).toString();
        if (tblName == null){
           txtName.setText("");
        }
        else {
            txtName.setText(tblName);
        }
        String tblContact = tblModel.getValueAt(tblEditCli.getSelectedRow(), 2).toString();
        if (tblContact == null){
           txtContact.setText("");
        }
        else {
            
            txtContact.setText(tblContact);
        }
        String tblEmail = tblModel.getValueAt(tblEditCli.getSelectedRow(), 3).toString();
        if (tblEmail == null){
            txtEmail.setText("");
        }
        else {
            
            txtEmail.setText(tblEmail);
        }
        
        // lägg till text i textrutorna
        
        
        
        
       
    }//GEN-LAST:event_tblEditCliMouseClicked
    
    // uppdaterar en client till det som står i textfälten.
    private void btnUpdateCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCliActionPerformed
        updateClient();    
    }//GEN-LAST:event_btnUpdateCliActionPerformed
    // söker i show tabellen om man trycker på sökknappen
    private void btnShowSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSearchActionPerformed
        searchClient(txtShowSearch, tblShowCli);    
    }//GEN-LAST:event_btnShowSearchActionPerformed
    // söker med enter i edit tabellen.
    private void txtEditSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEditSearchKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            searchClient(txtEditSearch, tblEditCli);
        }
    }//GEN-LAST:event_txtEditSearchKeyPressed
    // söker med enter i show tabellen.
    private void txtShowSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtShowSearchKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            searchClient(txtShowSearch, tblShowCli);
        }
    }//GEN-LAST:event_txtShowSearchKeyPressed

    
    // Lägger till clients till databasen.
    public void addClient(){
        String name = txtName.getText();
        String contact = txtContact.getText();
        String email = txtEmail.getText();
        
        try{
            Connection con = Coagent.getConnection();
            Statement stm = con.createStatement();
            String sql = "INSERT INTO clients(Clients_Name, Clients_Contact, Clients_Email) VALUES('"+name+"', '"+contact+"', '"+email+"')";
            
            // vill inte ha ett namn som är en tom sträng
            if (name.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a name");
            }
            else{
                stm.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Client is added");
            }    

        } catch (Exception e){System.out.println("e");}
    }
    
    // tar bort clients till databasen.
    public void deleteClient(JTable table){
        try{
            Connection con = Coagent.getConnection();
            int row = table.getSelectedRow();
            String id = table.getValueAt(row, 0).toString();
            int idnr = Integer.parseInt(id);
            String sql = "DELETE FROM clients WHERE Clients_Id = ?";
            PreparedStatement stm = con.prepareStatement(sql);
            stm.setInt(1, idnr);
            stm.executeUpdate();
            stm.close();
            JOptionPane.showMessageDialog(null, "Delete succesfully");
            
        } catch (Exception e){System.out.println("e");}  
    }
    
    //ändrar clients i databasen. 
    public void updateClient(){
        String name = txtName.getText();
        String contact = txtContact.getText();
        String email = txtEmail.getText();
    
        try {
            
            Connection con = Coagent.getConnection();
            Statement stm = con.createStatement();
            
            int row = tblEditCli.getSelectedRow();
            String value = tblEditCli.getValueAt(row, 0).toString();
            int idnr = Integer.parseInt(value);
            String sql = "UPDATE clients SET Clients_Id = '"+idnr+"', Clients_Name = '"+name+"', Clients_Contact = '"+contact+"', Clients_Email = '"+email+"' WHERE Clients_Id = '"+idnr+"'";
            
            if (name.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a name");
            }
            
            else {
                stm.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Update succesfully");
            }

            
        }catch (Exception e){System.out.println("e");} 
        
    }
    // söker direkt i databasen och skriver ut i table.
    public void searchClient(JTextField text, JTable table){
        String searchString = text.getText();
        String queryString;
        //if search is empty, query all contracts
        if(searchString.equals("")){
            queryString = "SELECT Clients_Id, Clients_Name, Clients_Contact, Clients_Email FROM clients;";
        } else {
                queryString = "SELECT Clients_Id, Clients_Name, Clients_Contact, Clients_Email  FROM clients "
                + "WHERE (Clients_Name LIKE '" + searchString + "%'"
                + " OR "
                + "Clients_Contact LIKE '" + searchString + "%'"
                + " OR "
                + "Clients_Email LIKE '" + searchString + "%'"
                + ");";
        }
        try {
            Connection con = Coagent.getConnection();
            PreparedStatement query = con.prepareStatement(queryString);
            ResultSet result = query.executeQuery();

            // Removing Previous Data
            while (table.getRowCount() > 0) {
                ((DefaultTableModel) table.getModel()).removeRow(0);
            }

            //Creating Object []rowData for jTable's Table Model
            int columns = result.getMetaData().getColumnCount();
            while (result.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = result.getObject(i); // 1
                }
                ((DefaultTableModel) table.getModel()).insertRow(result.getRow() - 1,row);
            }
            
            //jTableContracts1.setValueAt("AAA", 0, 0);

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    /* visar allt i clients i databasen sorterad på namn. Detta är dumt om databasen är stor
        eftersom det då fylls med lite för mycket data.
    */
    public void showClient(JTable table){
        String showString = "";
        String queryString;
        queryString = "SELECT clients_Id, Clients_Name, Clients_Contact, Clients_Email FROM clients ORDER BY Clients_Name ASC;";
        
        try {
            Connection con = Coagent.getConnection();
            PreparedStatement query = con.prepareStatement(queryString);
            ResultSet result = query.executeQuery();

            // Removing Previous Data
            while (table.getRowCount() > 0) {
                ((DefaultTableModel) table.getModel()).removeRow(0);
            }

            //Creating Object []rowData for jTable's Table Model
            int columns = result.getMetaData().getColumnCount();
            while (result.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = result.getObject(i); // 1
                }
                ((DefaultTableModel) table.getModel()).insertRow(result.getRow() - 1,row);
            }
            
            //jTableContracts1.setValueAt("AAA", 0, 0);

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCli;
    private javax.swing.JButton btnBackEdit;
    private javax.swing.JButton btnDeleteCli;
    private javax.swing.JButton btnEditClient;
    private javax.swing.JButton btnSearchEdit;
    private javax.swing.JButton btnShowBack;
    private javax.swing.JButton btnShowClient;
    private javax.swing.JButton btnShowSearch;
    private javax.swing.JButton btnUpdateCli;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHomeCli;
    private javax.swing.JPanel panelEditCli;
    private javax.swing.JPanel panelHomeCli;
    private javax.swing.JPanel panelShowCli;
    private javax.swing.JTable tblEditCli;
    private javax.swing.JTable tblShowCli;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEditSearch;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtShowSearch;
    // End of variables declaration//GEN-END:variables
    
    /*
    om man först vill spara ner som arraylist och sen lägga till i table. istället för
    att söka och lägga till direkt i table.
    
    
     // skapar en arraylist som sparar clients namn, contact och emails.  
    public ArrayList<ClientsJPanel.Client> clientList(){
        ArrayList<ClientsJPanel.Client> userList = new ArrayList<>();
        try{
            Connection con = Coagent.getConnection();
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery("SELECT Clients_Name, Clients_Contact, Clients_Email FROM clients");
            ClientsJPanel.Client user;
            while (rs.next()){ 
                user = new ClientsJPanel.Client(rs.getString("clients_Name"), rs.getString("clients_Contact"), rs.getString("clients_Email"));
                userList.add(user);
            }
        } catch (Exception e){JOptionPane.showMessageDialog(null, e);}
        return userList;
    }
    
    
        Visar clients, skriver ut arraylisten ovanför till en table.
        Har flera tables så har input table, så man vet till vilket table
        som arraylisten ska skrivas ut till.
    
    public void show_client(JTable table){
        
        ArrayList<ClientsJPanel.Client> list = clientList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for (int i = 0; i<list.size(); i++){
            row[0]= list.get(i).getclients_Name();
            row[1]= list.get(i).getclients_Contact();
            row[2]= list.get(i).getclients_Email();
            model.addRow(row);   
        }
       
    }
    
    
    private static class Client {
        private String clients_Name, clients_Contact, clients_Email;
        public Client(String clients_Name, String clients_Contact, String clients_Email) {
            
            this.clients_Name = clients_Name;
            this.clients_Contact = clients_Contact;
            this.clients_Email = clients_Email;
        }
        public String getclients_Name(){
            return clients_Name;
        }
        public String getclients_Contact(){
            return clients_Contact;
        }
        public String getclients_Email(){
            return clients_Email;
        }
    }
    
    // Söker i en table. Sätt keyRelease som event.
    public void searchTable(JTable table, JTextField text){
        DefaultTableModel tbl = (DefaultTableModel) table.getModel();
        String search = text.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tbl);
        table.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }
    
    */
}
