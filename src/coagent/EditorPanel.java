/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coagent;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author miche
 */
public class EditorPanel extends javax.swing.JPanel {

    /**
     * Creates new form randomJPanel
     */
    public EditorPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorSearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorTable = new javax.swing.JTable();
        editorSearchField = new javax.swing.JTextField();
        editorClearFields = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 255));

        editorSearchButton.setText("Search");
        editorSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorSearchButtonActionPerformed(evt);
            }
        });

        editorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Editor ID", "Editor Name", "Editor Contact", "Editor interested in", "Publisher Publisher ID?"
            }
        ));
        jScrollPane1.setViewportView(editorTable);

        editorSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorSearchFieldActionPerformed(evt);
            }
        });

        editorClearFields.setText("Clear fields");
        editorClearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorClearFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editorSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editorSearchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editorClearFields)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editorSearchButton)
                    .addComponent(editorSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editorClearFields))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editorSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editorSearchFieldActionPerformed

    private void editorSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorSearchButtonActionPerformed
        String editorSearchString = editorSearchField.getText();
        String editorQueryString;

        if(editorSearchString.equals("")){
            editorQueryString = "SELECT * FROM editors;";
        } else {
                editorQueryString = "SELECT * FROM editors "
                + "WHERE (Editor_Id LIKE '" + editorSearchString + "%'"
                + " OR "
                + "Editor_Name LIKE '" + editorSearchString + "%'"
                + " OR "
                + "Editor_Contact LIKE '" + editorSearchString + "%'"
                + " OR "
                + "Editor_Interested_In LIKE '" + editorSearchString + "%'"
                + " OR "
                + "Publisher_Publisher_Id LIKE '" + editorSearchString + "%'"
                + ");";
        }

            try {
            Connection con = Coagent.getConnection();
            PreparedStatement query = con.prepareStatement(editorQueryString);
            ResultSet result = query.executeQuery();


            while (editorTable.getRowCount() > 0) {
                ((DefaultTableModel) editorTable.getModel()).removeRow(0);
            }

            //Creating Object []rowData for jTable's Table Model
            int columns = result.getMetaData().getColumnCount();
            while (result.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = result.getObject(i); // 1
                }
                ((DefaultTableModel) editorTable.getModel()).insertRow(result.getRow() - 1,row);
            }


        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_editorSearchButtonActionPerformed


    private void editorClearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorClearFieldsActionPerformed

        DefaultTableModel dm = (DefaultTableModel) editorTable.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
    }//GEN-LAST:event_editorClearFieldsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editorClearFields;
    private javax.swing.JButton editorSearchButton;
    private javax.swing.JTextField editorSearchField;
    private javax.swing.JTable editorTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
